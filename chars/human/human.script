local Animation = require('chars.human.Animation')
local Collision = require('chars.human.Collision')

go.property('speed', 100)

function init(self)
	msg.post('.', 'acquire_input_focus')

	self.moving = false
	self.direction = vmath.vector3()
	self.key_down = false
	self.key_up = false
	self.key_right = false
	self.key_left = false
	self.key_interation = false
end

function final(self)
	msg.post('.', 'release_input_focus')
end

function update(self, dt)
	local position = go.get_position()
	local isWalkingRight = self.direction.x > 0

	if self.key_down then
		self.direction.y = -1
		Animation.walking_down()
	end
	
	if self.key_up then
		self.direction.y = 1
		Animation.walking_up()
	end
	
	if self.key_right then
		self.direction.x = 1
		Animation.walking_right()
	end
	
	if self.key_left then
		self.direction.x = -1
		Animation.walking_left()
	end

	if self.key_right and self.key_up then
		Animation.walking_up_right()
	end

	if self.key_left and self.key_up then
		Animation.walking_up_left()
	end

	if vmath.length(self.direction) > 0 then
		self.direction = vmath.normalize(self.direction)
		self.moving = true
	end

	if self.moving then
		position = position + self.direction * self.speed * dt
		go.set_position(position)
	end

	Animation.idle(self)
	Animation.apply(sprite)

	self.direction = vmath.vector3()
	self.moving = false
end

function on_input(self, action_id, action)
	local is_moving_up = action_id == hash('up')
	local is_moving_right = action_id == hash('right')
	local is_moving_down = action_id == hash('down')
	local is_moving_left = action_id == hash('left')
	local is_interacting = action_id == hash('interaction')

	if action.pressed then
		if is_moving_up then self.key_up = true end
		if is_moving_down then self.key_down = true end
		if is_moving_right then self.key_right = true end
		if is_moving_left then self.key_left = true end
		if is_interacting then self.key_interaction = true end
	end

	if action.released then
		if is_moving_up then self.key_up = false end
		if is_moving_down then self.key_down = false end
		if is_moving_right then self.key_right = false end
		if is_moving_left then self.key_left = false end
		if is_interacting then self.key_interaction = false end
	end

	print('key', action_id)
	print('key_interaction', self.key_interaction)
end

function on_message(self, message_id, message, sender)
	Collision.furniture(message_id, message)
	Collision.interaction(message_id, message, self)
end